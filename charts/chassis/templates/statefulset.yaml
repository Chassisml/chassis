apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chassis-build-server.fullname" . }}
  labels:
    {{- include "chassis-build-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chassis-build-server.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "chassis-build-server.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chassis-build-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chassis-build-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CHASSIS_DATA_DIR
              value: /opt/chassis
            - name: SERVICE_NAME
              value: {{ include "chassis-build-server.fullname" . }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: REGISTRY_URL
              value: {{ .Values.registry.url }}
            - name: REGISTRY_CREDENTIALS_SECRET_NAME
              value: {{ .Values.registry.credentialsSecretName }}
            - name: REGISTRY_PREFIX
              value: {{ .Values.registry.repositoryPrefix }}
            - name: REGISTRY_INSECURE
              value: "{{ .Values.registry.insecure }}"
            - name: LOG_LEVEL
              value: {{ ternary "debug" "info" .Values.debug }}
            - name: BUILD_TIMEOUT
              value: "{{ .Values.builder.timeout }}"
            - name: BUILD_TTL_AFTER_FINISHED
              value: "{{ .Values.builder.ttlSecondsAfterFinished }}"
            - name: BUILD_RESOURCES
              value: {{ toJson .Values.builder.resources | b64enc | quote }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /opt/chassis
              name: chassis-data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: chassis-data
      spec:
        accessModes: [ {{ .Values.persistence.accessMode }} ]
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}