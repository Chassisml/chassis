# Default values for chassis.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

registry:
  # The base URL to the destination registry that Chassis will push final
  url: ""
  # The name of a Kubernetes secret of type "dockerconfigjson"
  credentialsSecretName: ""
  # Optional prefix to be applied to image repositories created by Chassis
  repositoryPrefix: ""
  # Set to true if the registry is considered insecure. An insecure registry
  # is one that is hosted using HTTP or uses an untrusted TLS certificate.
  insecure: false

persistence:
  # The max context size that the API supports is 20Gi so setting the value to
  # lower than 20Gi could result in undefined behavior. If you need to support
  # deploying multiple large models simultaneously then you should increase
  # this value.
  size: 20Gi
  accessMode: ReadWriteOnce
  #storageClass: default

builder:
  # Set the timeout for how long a build job can take before it is canceled.
  timeout: 3600 # in seconds; 3600 == one hour
  # Set the amount of time before the Job is cleaned up and removed from
  # Kubernetes.
  ttlSecondsAfterFinished: 3600 # in seconds; 3600 == one hour
  # Set the resource requests and limits used by the builder job pods.
  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Set to `true` to enable debug logging.
debug: false

replicaCount: 1

image:
  repository: ghcr.io/modzy/chassis-build-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
