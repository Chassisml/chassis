# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    # tags: v*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  tests:
    runs-on: ubuntu-latest
    if: false

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test with pytest
        run: |
          pytest

  docs:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v2

      - name: Deploy
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Upgrade pip
        run: |
          # install pip=>20.1 to use "pip cache dir"
          python3 -m pip install --upgrade pip

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: python3 -m pip install -r ./requirements.txt

      - run: |
          cd chassisml_sdk/chassisml/
          git clone https://github.com/modzy/grpc_model.git
          git clone https://github.com/modzy/model_lib
          cd ../../docs/
          mkdocs build
          cd ../

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: /home/runner/work/chassis/chassis/docs/site         
          

  helm:
    # This is required since mkdocs wipes the
    # branch so it could delete all helm stuff.
    needs: [docs]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: See output of helm charts
        run: |
          helm template --debug --set $(echo $(cat service/.env | grep -v '^#') | tr ' ' ',') charts/*

      - name: Override values from service .env
        run: |
          # Populate values from .env file to helm values.
          cat service/.env \
            | grep -v '^#' \
            | grep -v '^$' \
            | while read -r line; do \
                field=$(echo $line | awk -F= '{ print $1  }'); \
                value=$(echo $line | awk -F= '{ print $2  }'); \
                sed -i "s,${field}:.*,${field}: ${value},g" charts/*/values.yaml; \
              done
          repo_service=ghcr.io/${{ github.repository }}-service:${{ github.sha }}
          sed -i "s,SERVICE_REPOSITORY:.*,SERVICE_REPOSITORY: ${repo_service},g" charts/*/values.yaml

      - name: Publish Helm charts
        uses: stefanprodan/helm-gh-pages@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          charts_dir: charts

  docker-service:
    needs: [lint]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Override modzy-uploader image value in .env file
        run: |
          repo_modzy_uploader=ghcr.io/${{ github.repository }}-modzy-uploader:${{ github.sha }}
          echo "MODZY_UPLOADER_REPOSITORY=${repo_modzy_uploader}" >> service/.env

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push service
        uses: docker/build-push-action@v2
        with:
          context: ./service
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-service:${{ github.sha }}
            ghcr.io/${{ github.repository }}-service:latest

      - name: Build and push Modzy uploader
        uses: docker/build-push-action@v2
        with:
          context: ./modzy-uploader
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-modzy-uploader:${{ github.sha }}
            ghcr.io/${{ github.repository }}-modzy-uploader:latest
