# The context is /workspace, which contains:
# - flavours
#   - mlflow

FROM nvidia/cuda:11.0-runtime-ubuntu20.04

# Install miniconda
RUN rm /etc/apt/sources.list.d/cuda.list
RUN apt-get update && apt-get install -y curl
RUN curl https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -o Miniconda3-latest-Linux-x86_64.sh
RUN bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3\
    && rm -f Miniconda3-latest-Linux-x86_64.sh
ENV PATH /opt/miniconda3/bin:$PATH

# At the moment it's always model.
ARG MODEL_DIR
# Should be: mlflow.
ARG MODEL_CLASS
# Interface.
ARG INTERFACE
# This is the model.yaml file.
ARG MODZY_METADATA_PATH
#PyPi Repo
ARG CHASSIS_PYPI_REPO
#Conda Repo
ARG CHASSIS_CONDA_CHANNEL_ALIAS

WORKDIR /app

#set Python repos
RUN mkdir ~/.pip
RUN echo '[global]' >| ~/.pip/pip.conf
RUN echo 'index-url = '${CHASSIS_PYPI_REPO} >> ~/.pip/pip.conf

RUN echo 'channels:'>| ~/.condarc
RUN echo '  - r'>> ~/.condarc
RUN echo '  - defaults'>> ~/.condarc
RUN echo 'show_channel_urls: True'>> ~/.condarc
RUN echo ${CHASSIS_CONDA_CHANNEL_ALIAS} >> ~/.condarc

COPY flavours/${MODEL_CLASS}/${MODEL_DIR}/conda.yaml ./conda.yaml

ENV CONDA_ENV chassis-env

# Create conda environment.
RUN conda env create --name $CONDA_ENV --file ./conda.yaml

ARG MODEL_NAME

WORKDIR /app

COPY flavours/${MODEL_CLASS}/${MODEL_DIR} ./model/${MODEL_NAME}
COPY flavours/${MODEL_CLASS}/entrypoint.sh /

ENV MODEL_DIR ./model/${MODEL_NAME}
ENV INTERFACE ${INTERFACE}

SHELL ["/bin/bash", "-c"]

COPY flavours/${MODEL_CLASS}/requirements.txt .
RUN /bin/bash -c "source activate chassis-env \
    && pip install --no-cache-dir -r requirements.txt \
    && conda deactivate"

COPY flavours/${MODEL_CLASS}/app.py .
COPY flavours/${MODEL_CLASS}/interfaces ./interfaces

# Overwrite the default one.
COPY ${MODZY_METADATA_PATH} ./interfaces/modzy/asset_bundle/0.1.0/model.yaml

ENTRYPOINT ["conda", "run", "--no-capture-output", "-n", "chassis-env", "python", "app.py"]

